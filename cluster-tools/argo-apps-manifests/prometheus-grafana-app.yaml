apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus-grafana-app
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  project: cluster-tools
  source:
    repoURL: https://github.com/Fro1m/clustertools.git
    targetRevision: main
    path: helm-charts/prometheus-grafana
    helm:
      releaseName: prometheus-grafana
      skipCrds: true
      values: |
        prometheusOperator:
          manageCrds: false
          admissionWebhooks:
            enabled: true
            failurePolicy: Ignore
            patch:
              enabled: false
            skipExisting: true  # Skip if resources already exist
        prometheus:
          prometheusSpec:
            serviceMonitorSelectorNilUsesHelmValues: false
            serviceMonitorNamespaceSelector: {}
            serviceMonitorSelector: {}
            resources:
              requests:
                memory: 400Mi
                cpu: 300m
              limits:
                memory: 1Gi
                cpu: 500m
            storageSpec:
              volumeClaimTemplate:
                spec:
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 10Gi
          service:
            type: LoadBalancer
            port: 9090
            targetPort: 9090
          ingress:
            enabled: false
        grafana:
          enabled: true
          admin:
            user: admin
            password: your-secure-password
          persistence:
            enabled: true
            size: 10Gi
          resources:
            requests:
              memory: 200Mi
              cpu: 200m
            limits:
              memory: 500Mi
              cpu: 300m
          service:
            type: LoadBalancer
            port: 80
            targetPort: 3000
          ingress:
            enabled: false
        alertmanager:
          enabled: true
          service:
            type: LoadBalancer
            port: 9093
            targetPort: 9093
          ingress:
            enabled: false
          config:
            global:
              resolve_timeout: 5m
            route:
              group_by: ['job']
              group_wait: 30s
              group_interval: 5m
              repeat_interval: 12h
              receiver: 'null'
              routes:
                - match:
                    alertname: Watchdog
                  receiver: 'null'
            receivers:
              - name: 'null'
        defaultRules:
          create: true
          rules:
            alertmanager: true
            etcd: true
            configReloaders: true
            general: true
            k8s: true
            kubeApiserverAvailability: true
            kubeApiserverBurnrate: true
            kubeApiserverHistogram: true
            kubeApiserverSlos: true
            kubeControllerManager: true
            kubelet: true
            kubeProxy: true
            kubePrometheusGeneral: true
            kubePrometheusNodeRecording: true
            kubernetesApps: true
            kubernetesResources: true
            kubernetesStorage: true
            kubernetesSystem: true
            kubeScheduler: true
            kubeStateMetrics: true
            kubelet: true
            network: true
            node: true
  destination:
    server: https://kubernetes.default.svc
    namespace: prometheus-grafana
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
      - Replace=true
      - Prune=true
      - PruneLast=true
      - PrunePropagationPolicy=foreground
      - ApplyOutOfSyncOnly=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m